create database pandemic;

-- public.auditoria definition

-- Drop table

-- DROP TABLE auditoria;

CREATE TABLE auditoria (
	id serial NOT NULL,
	tabela varchar(50) NOT NULL,
	usuario varchar(50) NOT NULL,
	"data" timestamp NOT NULL,
	operacao varchar(1) NOT NULL,
	newreg text NULL,
	oldreg text NULL,
	CONSTRAINT auditoria_pkey PRIMARY KEY (id)
);


-- public.auth_group definition

-- Drop table

-- DROP TABLE auth_group;

CREATE TABLE auth_group (
	id serial NOT NULL,
	"name" varchar(150) NOT NULL,
	CONSTRAINT auth_group_name_key UNIQUE (name),
	CONSTRAINT auth_group_pkey PRIMARY KEY (id)
);
CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


-- public.auth_user definition

-- Drop table

-- DROP TABLE auth_user;

CREATE TABLE auth_user (
	id serial NOT NULL,
	"password" varchar(128) NOT NULL,
	last_login timestamptz NULL,
	is_superuser bool NOT NULL,
	username varchar(150) NOT NULL,
	first_name varchar(150) NOT NULL,
	last_name varchar(150) NOT NULL,
	email varchar(254) NOT NULL,
	is_staff bool NOT NULL,
	is_active bool NOT NULL,
	date_joined timestamptz NOT NULL,
	CONSTRAINT auth_user_pkey PRIMARY KEY (id),
	CONSTRAINT auth_user_username_key UNIQUE (username)
);
CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


-- public.core_person definition

-- Drop table

-- DROP TABLE core_person;

CREATE TABLE core_person (
	nam_per varchar(255) NOT NULL,
	cpf_per varchar(255) NULL,
	ema_per varchar(80) NULL,
	nas_per date NOT NULL,
	tel_per varchar(30) NULL,
	cov_sit varchar(1) NOT NULL,
	wei_per float8 NULL,
	hei_per float8 NULL,
	id_per uuid NOT NULL,
	CONSTRAINT core_person_pkey PRIMARY KEY (id_per)
);

-- Table Triggers

-- DROP TRIGGER core_person_audit ON public.core_person;

CREATE TRIGGER core_person_audit
    AFTER INSERT
    ON public.core_person
    FOR EACH ROW
        EXECUTE PROCEDURE public.ft_auditoria();


-- public.core_symptom definition

-- Drop table

-- DROP TABLE core_symptom;

CREATE TABLE core_symptom (
	id_sym uuid NOT NULL,
	des_sym varchar(255) NOT NULL,
	CONSTRAINT core_symptom_des_sym_2ae624c3_uniq UNIQUE (des_sym),
	CONSTRAINT core_symptom_pkey PRIMARY KEY (id_sym)
);
CREATE INDEX core_symptom_des_sym_2ae624c3_like ON public.core_symptom USING btree (des_sym varchar_pattern_ops);


-- public.django_content_type definition

-- Drop table

-- DROP TABLE django_content_type;

CREATE TABLE django_content_type (
	id serial NOT NULL,
	app_label varchar(100) NOT NULL,
	model varchar(100) NOT NULL,
	CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model),
	CONSTRAINT django_content_type_pkey PRIMARY KEY (id)
);


-- public.django_migrations definition

-- Drop table

-- DROP TABLE django_migrations;

CREATE TABLE django_migrations (
	id bigserial NOT NULL,
	app varchar(255) NOT NULL,
	"name" varchar(255) NOT NULL,
	applied timestamptz NOT NULL,
	CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
);


-- public.django_session definition

-- Drop table

-- DROP TABLE django_session;

CREATE TABLE django_session (
	session_key varchar(40) NOT NULL,
	session_data text NOT NULL,
	expire_date timestamptz NOT NULL,
	CONSTRAINT django_session_pkey PRIMARY KEY (session_key)
);
CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);
CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


-- public.location_region definition

-- Drop table

-- DROP TABLE location_region;

CREATE TABLE location_region (
	id_reg uuid NOT NULL,
	nam_reg varchar(255) NOT NULL,
	CONSTRAINT location_region_pkey PRIMARY KEY (id_reg)
);


-- public.orientation_orientation definition

-- Drop table

-- DROP TABLE orientation_orientation;

CREATE TABLE orientation_orientation (
	id_ori uuid NOT NULL,
	des_ori text NOT NULL,
	dat_ori date NOT NULL,
	nam_ori varchar(255) NOT NULL,
	CONSTRAINT orientation_orientation_pkey PRIMARY KEY (id_ori)
);


-- public.auth_permission definition

-- Drop table

-- DROP TABLE auth_permission;

CREATE TABLE auth_permission (
	id serial NOT NULL,
	"name" varchar(255) NOT NULL,
	content_type_id int4 NOT NULL,
	codename varchar(100) NOT NULL,
	CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename),
	CONSTRAINT auth_permission_pkey PRIMARY KEY (id),
	CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES django_content_type(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


-- public.auth_user_groups definition

-- Drop table

-- DROP TABLE auth_user_groups;

CREATE TABLE auth_user_groups (
	id bigserial NOT NULL,
	user_id int4 NOT NULL,
	group_id int4 NOT NULL,
	CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id),
	CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id),
	CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES auth_group(id) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES auth_user(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);
CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


-- public.auth_user_user_permissions definition

-- Drop table

-- DROP TABLE auth_user_user_permissions;

CREATE TABLE auth_user_user_permissions (
	id bigserial NOT NULL,
	user_id int4 NOT NULL,
	permission_id int4 NOT NULL,
	CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id),
	CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id),
	CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES auth_permission(id) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES auth_user(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);
CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


-- public.authtoken_token definition

-- Drop table

-- DROP TABLE authtoken_token;

CREATE TABLE authtoken_token (
	"key" varchar(40) NOT NULL,
	created timestamptz NOT NULL,
	user_id int4 NOT NULL,
	CONSTRAINT authtoken_token_pkey PRIMARY KEY (key),
	CONSTRAINT authtoken_token_user_id_key UNIQUE (user_id),
	CONSTRAINT authtoken_token_user_id_35299eff_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES auth_user(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX authtoken_token_key_10f0b77e_like ON public.authtoken_token USING btree (key varchar_pattern_ops);


-- public.core_personsymptom definition

-- Drop table

-- DROP TABLE core_personsymptom;

CREATE TABLE core_personsymptom (
	dat_sym date NOT NULL,
	dat_cur date NULL,
	int_sym varchar(1) NOT NULL,
	id_per_id uuid NOT NULL,
	id_sym_id uuid NOT NULL,
	id_ps uuid NOT NULL,
	CONSTRAINT core_personsymptom_pkey PRIMARY KEY (id_ps),
	CONSTRAINT core_personsymptom_id_per_id_ce7be9ca_fk_core_person_id_per FOREIGN KEY (id_per_id) REFERENCES core_person(id_per) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT core_personsymptom_id_sym_id_f974b07b_fk_core_symptom_id_sym FOREIGN KEY (id_sym_id) REFERENCES core_symptom(id_sym) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX core_personsymptom_id_per_id_ce7be9ca ON public.core_personsymptom USING btree (id_per_id);
CREATE INDEX core_personsymptom_id_sym_id_f974b07b ON public.core_personsymptom USING btree (id_sym_id);

-- Table Triggers

-- DROP TRIGGER core_personsymptom_audit ON public.core_personsymptom;

CREATE TRIGGER core_personsymptom_audit
    AFTER INSERT
    ON public.core_personsymptom
    FOR EACH ROW
        EXECUTE PROCEDURE public.ft_auditoria();


-- public.django_admin_log definition

-- Drop table

-- DROP TABLE django_admin_log;

CREATE TABLE django_admin_log (
	id serial NOT NULL,
	action_time timestamptz NOT NULL,
	object_id text NULL,
	object_repr varchar(200) NOT NULL,
	action_flag int2 NOT NULL,
	change_message text NOT NULL,
	content_type_id int4 NULL,
	user_id int4 NOT NULL,
	CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0)),
	CONSTRAINT django_admin_log_pkey PRIMARY KEY (id),
	CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES django_content_type(id) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES auth_user(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);
CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


-- public.location_state definition

-- Drop table

-- DROP TABLE location_state;

CREATE TABLE location_state (
	id_sta uuid NOT NULL,
	nam_sta varchar(255) NOT NULL,
	ini_sta varchar(2) NOT NULL,
	cou_sta varchar(3) NOT NULL,
	id_reg_id uuid NOT NULL,
	CONSTRAINT location_state_ini_sta_key UNIQUE (ini_sta),
	CONSTRAINT location_state_nam_sta_key UNIQUE (nam_sta),
	CONSTRAINT location_state_pkey PRIMARY KEY (id_sta),
	CONSTRAINT location_state_id_reg_id_cae4a615_fk_location_region_id_reg FOREIGN KEY (id_reg_id) REFERENCES location_region(id_reg) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX location_state_id_reg_id_cae4a615 ON public.location_state USING btree (id_reg_id);
CREATE INDEX location_state_ini_sta_c0022aa0_like ON public.location_state USING btree (ini_sta varchar_pattern_ops);
CREATE INDEX location_state_nam_sta_d37ce41c_like ON public.location_state USING btree (nam_sta varchar_pattern_ops);


-- public.auth_group_permissions definition

-- Drop table

-- DROP TABLE auth_group_permissions;

CREATE TABLE auth_group_permissions (
	id bigserial NOT NULL,
	group_id int4 NOT NULL,
	permission_id int4 NOT NULL,
	CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id),
	CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id),
	CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES auth_permission(id) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES auth_group(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);
CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


-- public.location_city definition

-- Drop table

-- DROP TABLE location_city;

CREATE TABLE location_city (
	id_cit uuid NOT NULL,
	nam_cit varchar(255) NOT NULL,
	id_sta_id uuid NOT NULL,
	CONSTRAINT location_city_pkey PRIMARY KEY (id_cit),
	CONSTRAINT location_city_id_sta_id_eed938c7_fk_location_state_id_sta FOREIGN KEY (id_sta_id) REFERENCES location_state(id_sta) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX location_city_id_sta_id_eed938c7 ON public.location_city USING btree (id_sta_id);


-- public.location_adress definition

-- Drop table

-- DROP TABLE location_adress;

CREATE TABLE location_adress (
	id_add uuid NOT NULL,
	add_str varchar(255) NOT NULL,
	id_cit_id uuid NOT NULL,
	id_per_id uuid NOT NULL,
	CONSTRAINT location_adress_pkey PRIMARY KEY (id_add),
	CONSTRAINT location_adress_id_cit_id_ef5f5837_fk_location_city_id_cit FOREIGN KEY (id_cit_id) REFERENCES location_city(id_cit) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT location_adress_id_per_id_0a4742f9_fk_core_person_id_per FOREIGN KEY (id_per_id) REFERENCES core_person(id_per) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX location_adress_id_cit_id_ef5f5837 ON public.location_adress USING btree (id_cit_id);
CREATE INDEX location_adress_id_per_id_0a4742f9 ON public.location_adress USING btree (id_per_id);
